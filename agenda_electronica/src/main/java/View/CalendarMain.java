package View;

import Exceptions.ExceptieFebruarie;
import Exceptions.ExceptieLuna;
import Exceptions.LimiteAni;
import Exceptions.Exceptie4cifre;
import Exceptions.ExceptieZi;
import Model.Eveniment;
import Model.Zi;
import static View.CalendarFiller.date;
import static View.CalendarFiller.month;
import static View.CalendarFiller.year;
import java.awt.event.ItemEvent;
import javax.swing.JPanel;
import java.time.LocalDate;
import java.time.Year;
import java.util.Locale;
import javax.swing.JFrame;
import java.util.Calendar;
import static java.util.Calendar.MONTH;  
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JTable;
 

/**
 *
 * @author Elena
 */
public class CalendarMain extends javax.swing.JFrame {

    String monthLabel = "";
    String yearLabel = "";
    String weekLabel = "";
    String dayLabel = "";
    int panelSelected = 0;
    Calendar cal = Calendar.getInstance();
    EventDetails eventFrame;
    AddEvent addEventFrame;
    
    /** Creates new form CalendarMain */
    public CalendarMain() {
        initComponents();
        jAddEventMenuItem.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openAddEventWindow(evt);
            }
        });
        TimeChecker.checkAlarm(jAlarmList, jAlarmTextField);
        int year = LocalDate.now().getYear();
        int month = LocalDate.now().getMonthValue();
        int date = LocalDate.now().getDayOfMonth();
        java.awt.Image img = new javax.swing.ImageIcon(System.getProperty("user.dir") + "\\src\\main\\resources\\iconita.png").getImage();
        CalendarMain.getFrames()[0].setIconImage(img);
        
        CalendarFiller.year = year;
        CalendarFiller.month = month;
        CalendarFiller.date = date;
        jYearTextField.setText(String.valueOf(year));
        jMonthTextField.setText(String.valueOf(month));
        jDateText.setText(String.valueOf(date));
        jMonthYearLabel.setText(String.valueOf(year));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewMenueGroup = new javax.swing.ButtonGroup();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLayeredPanel = new javax.swing.JLayeredPane();
        jYearPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableJan = new javax.swing.JTable();
        label1 = new java.awt.Label();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableFeb = new javax.swing.JTable();
        label2 = new java.awt.Label();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableMar = new javax.swing.JTable();
        label3 = new java.awt.Label();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableApr = new javax.swing.JTable();
        label4 = new java.awt.Label();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTableMay = new javax.swing.JTable();
        label5 = new java.awt.Label();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTableJun = new javax.swing.JTable();
        label6 = new java.awt.Label();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTableJul = new javax.swing.JTable();
        label7 = new java.awt.Label();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableAug = new javax.swing.JTable();
        label8 = new java.awt.Label();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableSep = new javax.swing.JTable();
        label9 = new java.awt.Label();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableOct = new javax.swing.JTable();
        label10 = new java.awt.Label();
        jScrollPane13 = new javax.swing.JScrollPane();
        jTableNov = new javax.swing.JTable();
        label11 = new java.awt.Label();
        jScrollPane14 = new javax.swing.JScrollPane();
        jTableDec = new javax.swing.JTable();
        label12 = new java.awt.Label();
        jMonthPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jMonthTable = new javax.swing.JTable();
        jWeekPanel = new javax.swing.JPanel();
        jScrollPane15 = new javax.swing.JScrollPane();
        jWeekTable = new javax.swing.JTable();
        jDayPanel = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jDayEventList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jEventsListPanel = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        jEventsList = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        DateJumpButton = new javax.swing.JButton();
        jDateText = new javax.swing.JTextField();
        jMonthTextField = new javax.swing.JTextField();
        jYearTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        label13 = new java.awt.Label();
        jStopAlarmButton = new javax.swing.JButton();
        jAlarmTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jAlarmList = new javax.swing.JList<>();
        jButtonNext = new javax.swing.JButton();
        jButtonBack = new javax.swing.JButton();
        jMonthYearLabel = new java.awt.Label();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemYearView = new javax.swing.JRadioButtonMenuItem();
        jMenuItemMonthView = new javax.swing.JRadioButtonMenuItem();
        jMenuItemWeekView = new javax.swing.JRadioButtonMenuItem();
        jMenuItemDayView = new javax.swing.JRadioButtonMenuItem();
        jMenuItemEventList = new javax.swing.JRadioButtonMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jAddEventMenuItem = new javax.swing.JMenuItem();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLayeredPanel.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPanel.setLayout(new java.awt.CardLayout());

        jYearPanel.setBackground(new java.awt.Color(184, 219, 217));

        jScrollPane3.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableJan.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableJan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableJan.setRowHeight(11);
        jTableJan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTableJan);
        jTableJan.getAccessibleContext().setAccessibleName("");

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label1.setText("January");

        jScrollPane4.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableFeb.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableFeb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableFeb.setMaximumSize(new java.awt.Dimension(145, 44));
        jTableFeb.setRowHeight(11);
        jTableFeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTableFeb);
        jTableFeb.getAccessibleContext().setAccessibleName("");

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label2.setText("February");

        jScrollPane5.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableMar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableMar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMar.setRowHeight(11);
        jTableMar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(jTableMar);
        jTableMar.getAccessibleContext().setAccessibleName("");

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label3.setText("March");

        jScrollPane6.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableApr.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableApr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableApr.setRowHeight(11);
        jTableApr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane6.setViewportView(jTableApr);
        jTableApr.getAccessibleContext().setAccessibleName("");

        label4.setAlignment(java.awt.Label.CENTER);
        label4.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label4.setText("April");

        jScrollPane7.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableMay.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableMay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableMay.setRowHeight(11);
        jTableMay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(jTableMay);
        jTableMay.getAccessibleContext().setAccessibleName("");

        label5.setAlignment(java.awt.Label.CENTER);
        label5.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label5.setText("May");

        jScrollPane8.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N
        jScrollPane8.setMaximumSize(new java.awt.Dimension(150, 150));

        jTableJun.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableJun.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableJun.setRowHeight(11);
        jTableJun.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane8.setViewportView(jTableJun);
        jTableJun.getAccessibleContext().setAccessibleName("");

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label6.setText("June");

        jScrollPane9.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableJul.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableJul.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableJul.setRowHeight(11);
        jTableJul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane9.setViewportView(jTableJul);
        jTableJul.getAccessibleContext().setAccessibleName("");

        label7.setAlignment(java.awt.Label.CENTER);
        label7.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label7.setText("July");

        jScrollPane10.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableAug.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableAug.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAug.setRowHeight(11);
        jTableAug.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane10.setViewportView(jTableAug);
        jTableAug.getAccessibleContext().setAccessibleName("");

        label8.setAlignment(java.awt.Label.CENTER);
        label8.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label8.setText("August");

        jScrollPane11.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableSep.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableSep.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSep.setRowHeight(11);
        jTableSep.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane11.setViewportView(jTableSep);
        jTableSep.getAccessibleContext().setAccessibleName("");

        label9.setAlignment(java.awt.Label.CENTER);
        label9.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label9.setText("September");

        jScrollPane12.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableOct.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableOct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableOct.setRowHeight(11);
        jTableOct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane12.setViewportView(jTableOct);
        jTableOct.getAccessibleContext().setAccessibleName("");

        label10.setAlignment(java.awt.Label.CENTER);
        label10.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label10.setText("October");

        jScrollPane13.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableNov.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableNov.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableNov.setRowHeight(11);
        jTableNov.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane13.setViewportView(jTableNov);
        jTableNov.getAccessibleContext().setAccessibleName("");

        label11.setAlignment(java.awt.Label.CENTER);
        label11.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label11.setText("November");

        jScrollPane14.setFont(new java.awt.Font("Gill Sans Nova", 1, 8)); // NOI18N

        jTableDec.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTableDec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableDec.setRowHeight(11);
        jTableDec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane14.setViewportView(jTableDec);
        jTableDec.getAccessibleContext().setAccessibleName("");

        label12.setAlignment(java.awt.Label.CENTER);
        label12.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        label12.setText("December");

        javax.swing.GroupLayout jYearPanelLayout = new javax.swing.GroupLayout(jYearPanel);
        jYearPanel.setLayout(jYearPanelLayout);
        jYearPanelLayout.setHorizontalGroup(
            jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jYearPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(label9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(label2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(label7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(label11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jYearPanelLayout.createSequentialGroup()
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(label12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jYearPanelLayout.setVerticalGroup(
            jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jYearPanelLayout.createSequentialGroup()
                .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jYearPanelLayout.createSequentialGroup()
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jYearPanelLayout.createSequentialGroup()
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jYearPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jYearPanelLayout.createSequentialGroup()
                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jYearPanelLayout.createSequentialGroup()
                                .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLayeredPanel.add(jYearPanel, "card2");
        jYearPanel.getAccessibleContext().setAccessibleName("jYearPanel");

        jMonthPanel.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBorder(null);

        jMonthTable.setBackground(new java.awt.Color(184, 219, 217));
        jMonthTable.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        jMonthTable.setForeground(new java.awt.Color(47, 69, 80));
        jMonthTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jMonthTable.setCellSelectionEnabled(true);
        jMonthTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMonthTable.setRowHeight(56);
        jMonthTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTableJanMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jMonthTable);
        jMonthTable.getAccessibleContext().setAccessibleName("jMonthTable");

        javax.swing.GroupLayout jMonthPanelLayout = new javax.swing.GroupLayout(jMonthPanel);
        jMonthPanel.setLayout(jMonthPanelLayout);
        jMonthPanelLayout.setHorizontalGroup(
            jMonthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jMonthPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 652, Short.MAX_VALUE)
                .addContainerGap())
        );
        jMonthPanelLayout.setVerticalGroup(
            jMonthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)
        );

        jLayeredPanel.add(jMonthPanel, "card4");
        jMonthPanel.getAccessibleContext().setAccessibleName("jMonthPanel");
        jMonthPanel.getAccessibleContext().setAccessibleParent(jLayeredPanel);

        jWeekTable.setBackground(new java.awt.Color(184, 219, 217));
        jWeekTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jWeekTable.setCellSelectionEnabled(true);
        jWeekTable.setRowHeight(50);
        jWeekTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jWeekTableMousePressed(evt);
            }
        });
        jScrollPane15.setViewportView(jWeekTable);
        jWeekTable.getAccessibleContext().setAccessibleName("jWeekTable");

        javax.swing.GroupLayout jWeekPanelLayout = new javax.swing.GroupLayout(jWeekPanel);
        jWeekPanel.setLayout(jWeekPanelLayout);
        jWeekPanelLayout.setHorizontalGroup(
            jWeekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
        );
        jWeekPanelLayout.setVerticalGroup(
            jWeekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jWeekPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLayeredPanel.add(jWeekPanel, "card3");
        jWeekPanel.getAccessibleContext().setAccessibleName("jWeekPanel");

        jDayEventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jDayEventListMouseClicked(evt);
            }
        });
        jScrollPane16.setViewportView(jDayEventList);
        jDayEventList.getAccessibleContext().setAccessibleName("jDayEventList");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(47, 69, 80));
        jLabel1.setText("Evenimente zi:");

        javax.swing.GroupLayout jDayPanelLayout = new javax.swing.GroupLayout(jDayPanel);
        jDayPanel.setLayout(jDayPanelLayout);
        jDayPanelLayout.setHorizontalGroup(
            jDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDayPanelLayout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addGroup(jDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDayPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        jDayPanelLayout.setVerticalGroup(
            jDayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDayPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleName("jLabelNumeEveniment");

        jLayeredPanel.add(jDayPanel, "card5");
        jDayPanel.getAccessibleContext().setAccessibleName("jDayPanel");

        jEventsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jEventsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jEventsListMouseClicked(evt);
            }
        });
        jScrollPane17.setViewportView(jEventsList);
        jEventsList.getAccessibleContext().setAccessibleName("jEventsList");

        javax.swing.GroupLayout jEventsListPanelLayout = new javax.swing.GroupLayout(jEventsListPanel);
        jEventsListPanel.setLayout(jEventsListPanelLayout);
        jEventsListPanelLayout.setHorizontalGroup(
            jEventsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEventsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                .addContainerGap())
        );
        jEventsListPanelLayout.setVerticalGroup(
            jEventsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEventsListPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane17, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPanel.add(jEventsListPanel, "card6");
        jEventsListPanel.getAccessibleContext().setAccessibleName("jEventsListPanel");

        jPanel1.setBackground(new java.awt.Color(184, 219, 217));

        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createTitledBorder(null, "Select Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 0, 13)))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(47, 69, 80));
        jPanel2.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N

        DateJumpButton.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        DateJumpButton.setText("Jump");
        DateJumpButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(153, 255, 255), null, null));
        DateJumpButton.setBorderPainted(false);
        DateJumpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateJumpButtonActionPerformed(evt);
            }
        });

        jDateText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jDateText.setText("01");

        jMonthTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jMonthTextField.setText("01");

        jYearTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jYearTextField.setText("2021");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DateJumpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jDateText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DateJumpButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        DateJumpButton.getAccessibleContext().setAccessibleName("DateJumpButton");
        jDateText.getAccessibleContext().setAccessibleName("jDateText");
        jMonthTextField.getAccessibleContext().setAccessibleName("jMonthTextField");
        jYearTextField.getAccessibleContext().setAccessibleName("jYearTextField");

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder("Alarm"), null));

        label13.setForeground(new java.awt.Color(47, 69, 80));
        label13.setText("Alarm rings in");

        jStopAlarmButton.setBackground(new java.awt.Color(255, 255, 255));
        jStopAlarmButton.setText("Stop");
        jStopAlarmButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jStopAlarmButtonMouseClicked(evt);
            }
        });

        jAlarmTextField.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jStopAlarmButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(jAlarmTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAlarmTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jStopAlarmButton))
        );

        label13.getAccessibleContext().setAccessibleName("label13");
        jStopAlarmButton.getAccessibleContext().setAccessibleName("jStopAlarmButton");
        jAlarmTextField.getAccessibleContext().setAccessibleName("jAlarmTextField");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createTitledBorder(null, "Active Alarms", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Courier New", 0, 13)), null)); // NOI18N

        jAlarmList.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        jScrollPane1.setViewportView(jAlarmList);
        jAlarmList.getAccessibleContext().setAccessibleName("jAlarmList");
        jAlarmList.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/next_small.png"))); // NOI18N
        jButtonNext.setBorderPainted(false);
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        jButtonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/back_small.png"))); // NOI18N
        jButtonBack.setBorderPainted(false);
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        jMonthYearLabel.setAlignment(java.awt.Label.CENTER);
        jMonthYearLabel.setBackground(new java.awt.Color(88, 111, 124));
        jMonthYearLabel.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jMonthYearLabel.setForeground(new java.awt.Color(255, 255, 255));
        jMonthYearLabel.setText("Month,Year");

        jMenuBar1.setForeground(new java.awt.Color(184, 219, 217));

        jMenu1.setText("View");

        viewMenueGroup.add(jMenuItemYearView);
        jMenuItemYearView.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jMenuItemYearView.setSelected(true);
        jMenuItemYearView.setText("Year");
        jMenuItemYearView.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenuItemYearViewItemStateChanged(evt);
            }
        });
        jMenu1.add(jMenuItemYearView);
        jMenuItemYearView.getAccessibleContext().setAccessibleName("jMenuItemYearView");

        viewMenueGroup.add(jMenuItemMonthView);
        jMenuItemMonthView.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jMenuItemMonthView.setText("Month");
        jMenuItemMonthView.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenuItemMonthViewItemStateChanged(evt);
            }
        });
        jMenu1.add(jMenuItemMonthView);
        jMenuItemMonthView.getAccessibleContext().setAccessibleName("jMenuItemMonthView");

        viewMenueGroup.add(jMenuItemWeekView);
        jMenuItemWeekView.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jMenuItemWeekView.setText("Week");
        jMenuItemWeekView.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenuItemWeekViewItemStateChanged(evt);
            }
        });
        jMenu1.add(jMenuItemWeekView);
        jMenuItemWeekView.getAccessibleContext().setAccessibleName("jMenuItemWeekView");

        viewMenueGroup.add(jMenuItemDayView);
        jMenuItemDayView.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jMenuItemDayView.setText("Day");
        jMenuItemDayView.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenuItemDayViewItemStateChanged(evt);
            }
        });
        jMenu1.add(jMenuItemDayView);
        jMenuItemDayView.getAccessibleContext().setAccessibleName("jMenuItemDayView");
        jMenuItemDayView.getAccessibleContext().setAccessibleDescription("");

        viewMenueGroup.add(jMenuItemEventList);
        jMenuItemEventList.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jMenuItemEventList.setText("Events List");
        jMenuItemEventList.setToolTipText("");
        jMenuItemEventList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jMenuItemEventListItemStateChanged(evt);
            }
        });
        jMenu1.add(jMenuItemEventList);
        jMenuItemEventList.getAccessibleContext().setAccessibleName("jMenuItemEventList");

        jMenuBar1.add(jMenu1);
        jMenu1.getAccessibleContext().setAccessibleName("jMenu");

        jMenu2.setText("Edit");

        jAddEventMenuItem.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jAddEventMenuItem.setText("Adaugare eveniment");
        jMenu2.add(jAddEventMenuItem);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBack, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jMonthYearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(202, 202, 202)
                        .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonNext)
                        .addComponent(jButtonBack))
                    .addComponent(jMonthYearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLayeredPanel.getAccessibleContext().setAccessibleName("jLayeredPanel");
        jButtonNext.getAccessibleContext().setAccessibleName("jButtonNext");
        jButtonBack.getAccessibleContext().setAccessibleName("jButtonBack");
        jMonthYearLabel.getAccessibleContext().setAccessibleName("");
        //jMonthYearLabel.setFont(calendaryHands);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemMonthViewItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenuItemMonthViewItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            switchPanels(jMonthPanel);
            jMonthYearLabel.setText(monthLabel);
            panelSelected = 1;
            CalendarFiller.fillInTable(panelSelected, jMonthTable);
        }
    }//GEN-LAST:event_jMenuItemMonthViewItemStateChanged

    private void jMenuItemYearViewItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenuItemYearViewItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            switchPanels(jYearPanel);
            jMonthYearLabel.setText(yearLabel);
            panelSelected = 0;
            CalendarFiller.fillInTable(panelSelected, jTableJan, jTableFeb, jTableMar, jTableApr, jTableMay, jTableJun, jTableJul, jTableAug, jTableSep, jTableOct, jTableNov, jTableDec);
        }
    }//GEN-LAST:event_jMenuItemYearViewItemStateChanged

    private void jMenuItemWeekViewItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenuItemWeekViewItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            switchPanels(jWeekPanel);
            panelSelected = 2;
            jMonthYearLabel.setText(weekLabel);
            CalendarFiller.fillInTable(panelSelected, jWeekTable);
        }
    }//GEN-LAST:event_jMenuItemWeekViewItemStateChanged
     /**
     * The button to jump to a specific date
     * you can introduce only numbers in YearField, MonthField and DayField
     * For MonthField you can introduce numbers less than 12
     * For February is an exception: you can introduce numbers less than 29 
     * For the rest - numbers less than 31 
     */
    private void DateJumpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateJumpButtonActionPerformed
        boolean canJump = true;
        try {        
            if(Integer.parseInt(jYearTextField.getText()) < 2018 || Integer.parseInt(jYearTextField.getText()) > 2030) {
                canJump = false;
                throw new LimiteAni();
            }
            int n = Integer.parseInt(jYearTextField.getText());
            int nrCifre = 0;
            while (n != 0)
            {
                nrCifre++;
                n = n / 10;
            }
            if(nrCifre != 4){
                canJump = false;
                throw new Exceptie4cifre();
            }
            CalendarFiller.year = Integer.parseInt(jYearTextField.getText());
        } catch(NumberFormatException e) {
            System.out.println("Exceptie : Introduceti doar cifre in caseta pt an!");
        } catch (Exceptie4cifre ex) {
            System.out.println("Exceptie : " + ex.toString());
        } catch (LimiteAni ex) {
            System.out.println("Exceptie : " + ex.toString());
        }
        
        try {       
            if(Integer.parseInt(jMonthTextField.getText()) < 1 || Integer.parseInt(jMonthTextField.getText()) > 12) {
                canJump = false;
                throw new ExceptieLuna();
            }
            CalendarFiller.month = Integer.valueOf(jMonthTextField.getText());
        } catch (ExceptieLuna ex) {
            System.out.println("Exceptie : " + ex.toString());
        }
        catch(NumberFormatException e) {
            System.out.println("Exceptie : Introduceti doar cifre in caseta pt luna!");
        } 
        
        try {        
            if(Integer.valueOf(jDateText.getText()) < 1 || Integer.valueOf(jDateText.getText()) > 31){
                canJump = false;
                throw new ExceptieZi();
            }            
            if(Integer.valueOf(jMonthTextField.getText()) == 2 && Integer.valueOf(jDateText.getText()) > 29) {
                canJump = false;
                throw new ExceptieFebruarie();
            }
            CalendarFiller.date = Integer.valueOf(jDateText.getText());
        } catch(NumberFormatException e) {
            System.out.println("Exceptie : Introduceti doar cifre in caseta pt zi!");
        } catch(ExceptieZi ex) { 
            System.out.println("Exceptie : " + ex.toString());
        } catch (ExceptieFebruarie ex) {
            System.out.println("Exceptie : " + ex.toString());
        }
        
        if (canJump){
            cal.set(year, month, date);
            switchPanelName();       

            try {
                CalendarFiller.fillInList(panelSelected, jDayEventList);
            } catch (ParseException ex) {
                Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
            }

            try {
                CalendarFiller.fillInList(panelSelected, jEventsList);
            } catch (ParseException ex) {
                Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
            }

            CalendarFiller.fillInTable(panelSelected, jMonthTable);
            CalendarFiller.fillInTable(panelSelected, jWeekTable);
            CalendarFiller.fillInTable(panelSelected, jTableJan, jTableFeb, jTableMar, jTableApr, jTableMay, jTableJun, jTableJul, jTableAug, jTableSep, jTableOct, jTableNov, jTableDec);
        }
    }//GEN-LAST:event_DateJumpButtonActionPerformed

    
     /**
     *  If the selected panel = 1, you can move to the next year
     *  If the selected panel = 2, you can move to the next month
     *  If the selected panel = 1, you can move to the next day of month
     */
    
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        if(panelSelected == 1){
            if(CalendarFiller.month < 12){
                CalendarFiller.month++;
            } else {
                CalendarFiller.month = 1;
                CalendarFiller.year++;
            }
        } else if(panelSelected == 2) {
            if(CalendarFiller.month == 12 && (CalendarFiller.date + 7 > 31)){
                CalendarFiller.month = 1;
                CalendarFiller.year++;
                CalendarFiller.date = CalendarFiller.date + 7 - 31;
            } else {
                cal.set(CalendarFiller.year, CalendarFiller.month - 1, CalendarFiller.date);
                int dayOfYear = cal.get(Calendar.DAY_OF_YEAR);
                dayOfYear += 7;
                Year y = Year.of(CalendarFiller.year) ;
                LocalDate ld = y.atDay(dayOfYear);
                CalendarFiller.month = ld.getMonthValue();
                CalendarFiller.date = ld.getDayOfMonth();
            }
        } else if(panelSelected == 3) {
            if(CalendarFiller.month == 12 && (CalendarFiller.date + 1 > 31)){
                CalendarFiller.month = 1;
                CalendarFiller.year++;
                CalendarFiller.date = CalendarFiller.date + 1 - 31;
            } else {
                cal.set(CalendarFiller.year, CalendarFiller.month - 1, CalendarFiller.date);
                int dayOfYear = cal.get(Calendar.DAY_OF_YEAR);
                dayOfYear += 1;
                Year y = Year.of(CalendarFiller.year) ;
                LocalDate ld = y.atDay(dayOfYear);
                CalendarFiller.month = ld.getMonthValue();
                CalendarFiller.date = ld.getDayOfMonth();
            }
        } else {
            CalendarFiller.year++;
        }
        cal.set(CalendarFiller.year, CalendarFiller.month - 1, CalendarFiller.date);
        
        jMonthTextField.setText(String.valueOf(CalendarFiller.month));
        jYearTextField.setText(String.valueOf(CalendarFiller.year));
        jDateText.setText(String.valueOf(CalendarFiller.date));
        switchPanelName();        
        try {
            CalendarFiller.fillInList(panelSelected, jDayEventList);
        } catch (ParseException ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            CalendarFiller.fillInList(panelSelected, jEventsList);
        } catch (ParseException ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        CalendarFiller.fillInTable(panelSelected, jMonthTable);
        CalendarFiller.fillInTable(panelSelected, jWeekTable);
        CalendarFiller.fillInTable(panelSelected, jTableJan, jTableFeb, jTableMar, jTableApr, jTableMay, jTableJun, jTableJul, jTableAug, jTableSep, jTableOct, jTableNov, jTableDec);
    }//GEN-LAST:event_jButtonNextActionPerformed
    
    //DefaultTableModel mod;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
       CalendarFiller.addModel(jMonthTable);
       CalendarFiller.addModel(jWeekTable);
       CalendarFiller.addModel(jTableJan, jTableFeb, jTableMar, jTableApr, jTableMay, jTableJun, jTableJul, jTableAug, jTableSep, jTableOct, jTableNov, jTableDec);
       
        try {
            CalendarFiller.fillInList(panelSelected, jDayEventList);
        } catch (ParseException ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            CalendarFiller.fillInList(panelSelected, jEventsList);
        } catch (ParseException ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
       CalendarFiller.fillInTable(panelSelected, jMonthTable);
       CalendarFiller.fillInTable(panelSelected, jWeekTable);
       CalendarFiller.fillInTable(panelSelected, jTableJan, jTableFeb, jTableMar, jTableApr, jTableMay, jTableJun, jTableJul, jTableAug, jTableSep, jTableOct, jTableNov, jTableDec);
    }//GEN-LAST:event_formWindowOpened

      /**
     *  If the selected panel = 1, you can move to the previous year
     *  If the selected panel = 2, you can move to the previous month
     *  If the selected panel = 1, you can move to the previous day of month
     */
    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        if(panelSelected == 1){
            if(CalendarFiller.month > 1){
                CalendarFiller.month--;
            } else {
                CalendarFiller.month = 12;
                CalendarFiller.year--;
            }
        } else if(panelSelected == 2) {
            if(CalendarFiller.month == 1 && (CalendarFiller.date - 7 < 0)){
                CalendarFiller.month = 12;
                CalendarFiller.year--;
                CalendarFiller.date = 31 + CalendarFiller.date - 7;
            } else {
                cal.set(CalendarFiller.year, CalendarFiller.month - 1, CalendarFiller.date);
                int dayOfYear = cal.get(Calendar.DAY_OF_YEAR);
                dayOfYear -= 7;
                Year y = Year.of(CalendarFiller.year) ;
                LocalDate ld = y.atDay(dayOfYear);
                CalendarFiller.month = ld.getMonthValue();
                CalendarFiller.date = ld.getDayOfMonth();
            }
        } else if(panelSelected == 3) { 
            if(CalendarFiller.month == 1 && (CalendarFiller.date - 1 < 0)){
                CalendarFiller.month = 12;
                CalendarFiller.year--;
                CalendarFiller.date = 31 + CalendarFiller.date - 1;
            } else {
                cal.set(CalendarFiller.year, CalendarFiller.month - 1, CalendarFiller.date);
                int dayOfYear = cal.get(Calendar.DAY_OF_YEAR);
                dayOfYear -= 1;
                Year y = Year.of(CalendarFiller.year) ;
                LocalDate ld = y.atDay(dayOfYear);
                CalendarFiller.month = ld.getMonthValue();
                CalendarFiller.date = ld.getDayOfMonth();
            }
        } else {
            CalendarFiller.year--;
        }
        cal.set(CalendarFiller.year, CalendarFiller.month - 1, CalendarFiller.date);
        
        jMonthTextField.setText(String.valueOf(CalendarFiller.month));
        jYearTextField.setText(String.valueOf(CalendarFiller.year));
        jDateText.setText(String.valueOf(CalendarFiller.date));
        switchPanelName();
        try {
            CalendarFiller.fillInList(panelSelected, jDayEventList);
        } catch (ParseException ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            CalendarFiller.fillInList(panelSelected, jEventsList);
        } catch (ParseException ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        CalendarFiller.fillInTable(panelSelected, jMonthTable);
        CalendarFiller.fillInTable(panelSelected, jWeekTable);
        CalendarFiller.fillInTable(panelSelected, jTableJan, jTableFeb, jTableMar, jTableApr, jTableMay, jTableJun, jTableJul, jTableAug, jTableSep, jTableOct, jTableNov, jTableDec);
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jMenuItemDayViewItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenuItemDayViewItemStateChanged
          if(evt.getStateChange() == ItemEvent.SELECTED){
            switchPanels(jDayPanel);
            panelSelected = 3;
            jMonthYearLabel.setText(dayLabel);
            try {
                CalendarFiller.fillInList(panelSelected, jDayEventList);
            } catch (ParseException ex) {
                Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
            }          
        }
    }//GEN-LAST:event_jMenuItemDayViewItemStateChanged

    private void jEventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEventListMouseClicked
        
    }//GEN-LAST:event_jEventListMouseClicked

    private void jStopAlarmButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jStopAlarmButtonMouseClicked
        TimeChecker.StopAlarm();
    }//GEN-LAST:event_jStopAlarmButtonMouseClicked

    private void jMenuItemEventListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jMenuItemEventListItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED){
            switchPanels(jEventsListPanel);
            panelSelected = 4;
            jMonthYearLabel.setText("All Events");
            try {
                CalendarFiller.fillInList(panelSelected, jEventsList);
            } catch (ParseException ex) {
                Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItemEventListItemStateChanged

    private void jDayEventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jDayEventListMouseClicked
        openEventDetailsWindow(evt);
    }//GEN-LAST:event_jDayEventListMouseClicked

    private void jEventsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jEventsListMouseClicked
        openEventDetailsWindow(evt);
    }//GEN-LAST:event_jEventsListMouseClicked

    private void jTableJanMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableJanMousePressed
        JTable table =(JTable) evt.getSource();
        if (evt.getClickCount() == 2 && table.getSelectedRow() != -1) {
            int row = table.getSelectedRow();
            int column = table.getSelectedColumn();
            Zi event = (Zi)table.getValueAt(row, column);
            //table.setValueAt(event, row, column);
            if(null != table.getCellEditor()) {
                table.getCellEditor().stopCellEditing();
            }
            if(event != null){
                cal.setTime(event.getDate());
                jDateText.setText(String.valueOf(cal.get(Calendar.DAY_OF_MONTH)));
                jMonthTextField.setText(String.valueOf(cal.get(Calendar.MONTH) + 1));
                jYearTextField.setText(String.valueOf(cal.get(Calendar.YEAR)));
                switchPanels(jDayPanel);
                jMenuItemDayView.setSelected(true);
                panelSelected = 3;
                DateJumpButtonActionPerformed(null);
                try {
                    CalendarFiller.fillInList(panelSelected, jDayEventList);
                } catch (ParseException ex) {
                    Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
                } 
            }
        }
    }//GEN-LAST:event_jTableJanMousePressed

    private void jWeekTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jWeekTableMousePressed
        JTable table = (JTable) evt.getSource();                                    
        if (evt.getClickCount() == 2) {
            int row = table.getSelectedRow();
            int column = table.getSelectedColumn();
            Eveniment event = (Eveniment)table.getValueAt(row, column);
            if(null != table.getCellEditor()) {
                table.getCellEditor().stopCellEditing();
            }
            if(event != null){
                try {
                    eventFrame = new EventDetails(this, event);
                } catch (Exception ex) {
                    Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
                }
                eventFrame.setVisible(true);
                eventFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            }
            CalendarFiller.fillInTable(panelSelected, jWeekTable);
        }
        
    }//GEN-LAST:event_jWeekTableMousePressed

    /**
     *  The function to open the windows with the event details
     * @param evt
     */
    private void openEventDetailsWindow(java.awt.event.MouseEvent evt){
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            //int index = list.locationToIndex(evt.getPoint());
            try {
                eventFrame = new EventDetails(this, (Eveniment)list.getSelectedValue());
            } catch (Exception ex) {
                Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
            }
            eventFrame.setVisible(true);
            eventFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        }
    }
    
     /**
     *  The function to open the add event windows 
     * @param evt
     */
    private void openAddEventWindow(java.awt.event.ActionEvent evt){
        try {
            addEventFrame = new AddEvent(this);
        } catch (Exception ex) {
            Logger.getLogger(CalendarMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        addEventFrame.setVisible(true);
        addEventFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalendarMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalendarMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalendarMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalendarMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalendarMain().setVisible(true);
            }
        });
    }
    
     /**
     *  The function to switch panels
     * @param panel
     */
    public void switchPanels(JPanel panel){
        jLayeredPanel.removeAll();
        jLayeredPanel.add(panel);
        jLayeredPanel.repaint();
        jLayeredPanel.revalidate();
        switchPanelName();
    }
    /**
     * switch between the 4 panels(year, month, week and day)
     */
    private void switchPanelName(){
        cal.set(MONTH, Integer.parseInt(jMonthTextField.getText()) - 1);
        monthLabel = cal.getDisplayName(MONTH, Calendar.LONG, Locale.ENGLISH);
        yearLabel = jYearTextField.getText();
        weekLabel = "Week " + String.valueOf(cal.get(Calendar.WEEK_OF_YEAR));
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        dayLabel = dateFormat.format(cal.getTime());
        if(panelSelected == 0){
            jMonthYearLabel.setText(yearLabel);
        } else if(panelSelected == 1){
            jMonthYearLabel.setText(monthLabel);
        } else if(panelSelected == 2){
            jMonthYearLabel.setText(weekLabel);
        } else if(panelSelected == 3){
            jMonthYearLabel.setText(dayLabel);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DateJumpButton;
    private javax.swing.JMenuItem jAddEventMenuItem;
    private javax.swing.JList<String> jAlarmList;
    private javax.swing.JTextField jAlarmTextField;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JTextField jDateText;
    private javax.swing.JList<String> jDayEventList;
    private javax.swing.JPanel jDayPanel;
    private javax.swing.JList<String> jEventsList;
    private javax.swing.JPanel jEventsListPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLayeredPane jLayeredPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JRadioButtonMenuItem jMenuItemDayView;
    private javax.swing.JRadioButtonMenuItem jMenuItemEventList;
    private javax.swing.JRadioButtonMenuItem jMenuItemMonthView;
    private javax.swing.JRadioButtonMenuItem jMenuItemWeekView;
    private javax.swing.JRadioButtonMenuItem jMenuItemYearView;
    private javax.swing.JPanel jMonthPanel;
    private javax.swing.JTable jMonthTable;
    private javax.swing.JTextField jMonthTextField;
    private java.awt.Label jMonthYearLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JButton jStopAlarmButton;
    private javax.swing.JTable jTableApr;
    private javax.swing.JTable jTableAug;
    private javax.swing.JTable jTableDec;
    private javax.swing.JTable jTableFeb;
    private javax.swing.JTable jTableJan;
    private javax.swing.JTable jTableJul;
    private javax.swing.JTable jTableJun;
    private javax.swing.JTable jTableMar;
    private javax.swing.JTable jTableMay;
    private javax.swing.JTable jTableNov;
    private javax.swing.JTable jTableOct;
    private javax.swing.JTable jTableSep;
    private javax.swing.JPanel jWeekPanel;
    private javax.swing.JTable jWeekTable;
    private javax.swing.JPanel jYearPanel;
    private javax.swing.JTextField jYearTextField;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.ButtonGroup viewMenueGroup;
    // End of variables declaration//GEN-END:variables

}
